<Window x:Class="URMoney.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:URMoney"
        mc:Ignorable="d"
        Title="URMoney" MinHeight="550" MinWidth="900" Height="550" Width="900">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <SolidColorBrush x:Key="Grid.Background" Color="LightGray"/>
        <Style x:Key="MainBut" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="But_LefpPanel" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key ="logo1" TargetType ="Image">
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
        </Style>
        <Style x:Key="BorderLogo" TargetType="{x:Type Ellipse}">
            <Setter Property="Grid.Column" Value="2"/>
            <Setter Property="Fill" Value="LightGray"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>
        <Style x:Key="FAQ" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Grid.Column" Value="4"/>
            <Setter Property="Content" Value="?"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,3,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="10">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="But_Center" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="47"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="But_Center2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="47"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NameTableExpenses" TargetType="{x:Type Label}">
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="47"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="Panel_But_Expenses" TargetType="{x:Type StackPanel}">
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>
        <Style x:Key="But_Expenses" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="15"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#A9A9A9"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Output" TargetType="{x:Type TextBox}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="Background" Value="#545454"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>
        <Style x:Key="Calc_TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="Margin" Value="0 11 0 11"/>
            <Setter Property="Width" Value="100"/>
        </Style>
        <Style x:Key="Calc_TextBlock" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!-- Шаблон для кнопок редактирования -->
        <Style x:Key="UserButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Шаблон для кнопки выхода -->
        <Style x:Key="UserButtonExit" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Grid.Column" Value="4"/>
            <Setter Property="Content" Value="Ок"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,3,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="40">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <!-- Главное окно -->
        <Grid x:Name="MainFrame" Background="Gray" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition Height="70">
                </RowDefinition>
                <RowDefinition Height="*">
                </RowDefinition>
                <RowDefinition Height="30">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!-- Стак панель для кнопок сверху -->
            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Center">
                <Button x:Name="tablesButton" Style="{DynamicResource MainBut}" Grid.Column="0" Content="Таблицы учёта" Click="tablesButton_Click"/>
                <Separator Opacity="0" Width="320"/>
                <Button x:Name="calcsButton" Style="{DynamicResource MainBut}" Grid.Column="3" Content="Расчёты" Click="calcsButton_Click"/>
            </StackPanel>
            <!-- Лого с обводкой -->
            <Ellipse Style="{DynamicResource BorderLogo}" Grid.Column="1" Height="60" Width="60"/>
            <Image Style="{DynamicResource logo1}" Grid.Column="1" Height="60"/>
            <!-- Стак панель для кнопок в левой части окна -->
            <StackPanel x:Name="elemsDBStackPanel" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                <Button Style="{DynamicResource But_LefpPanel}">
                </Button>
                <Button Style="{DynamicResource But_LefpPanel}">
                </Button>
                <Button Style="{DynamicResource But_LefpPanel}">
                </Button>
                <Button Style="{DynamicResource But_LefpPanel}">
                </Button>
                <Button Style="{DynamicResource But_LefpPanel}">
                </Button>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" />
            <!-- Стак панель для кнопок по центру -->
            <StackPanel x:Name="tablesStackPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Visibility="Hidden">
                <Button  x:Name="incomeButton" Style="{DynamicResource But_Center}" Content="Доходы" Click="incomeButton_Click">
                </Button>
                <Button x:Name="expensesButton" Style="{DynamicResource But_Center}" Content="Расходы" Click="expensesButton_Click">
                </Button>
                <Button x:Name="visualisationButton" Style="{DynamicResource But_Center}" Content="Визуализация" Click="visualisationButton_Click">
                </Button>
            </StackPanel>
            <!-- Стак панель для кнопок по центру 2-->
            <StackPanel x:Name="calcStackPanel" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Visibility="Hidden">
                <Button x:Name="depositButton" Style="{DynamicResource But_Center2}" Content="Вклады" Click="depositButton_Click">
                </Button>
                <Button x:Name="percentButton" Style="{DynamicResource But_Center2}" Content="Проценты" Click="percentButton_Click">
                </Button>
                <Button x:Name="creditButton" Style="{DynamicResource But_Center2}" Content="Кредиты" Click="creditButton_Click">
                </Button>
                <Button x:Name="convertButton"  Style="{DynamicResource But_Center2}" Content="Конвертер" Click="convertButton_Click">
                </Button>
            </StackPanel>
        </Grid>
        <!-- Окно с таблицами -->
        <Grid x:Name="FrameTables" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition Height="*">
                </RowDefinition>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="200">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label x:Name="expenses" Style="{DynamicResource NameTableExpenses}" Grid.Row="0" Grid.Column="1" Content="Таблица Расходов">
            </Label>
            <Label x:Name="income" Style="{DynamicResource NameTableExpenses}" Grid.Row="0" Grid.Column="1" Content="Таблица Доходов" Visibility="Hidden">
            </Label>
            <DataGrid x:Name="table" Grid.Row="1" Grid.Column="1" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Path=Column1}" Width="*"/>
                    <DataGridTextColumn Header="Категория" Binding="{Binding Path=Column2}" Width="*"/>
                    <DataGridTextColumn Header="Название" Binding="{Binding Path=Column3}" Width="*"/>
                    <DataGridTextColumn Header="Человек" Binding="{Binding Path=Column4}" Width="*"/>
                    <DataGridTextColumn Header="Сумма" Binding="{Binding Path=Column5}" Width="*"/>
                    <DataGridTextColumn Header="Валюта" Binding="{Binding Path=Column6}" Width="*"/>
                    <DataGridTextColumn Header="Дата" Binding="{Binding Path=Column7}" Width="*"/>
                    <DataGridTextColumn Header="Примечание" Binding="{Binding Path=Column8}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Style="{DynamicResource Panel_But_Expenses}" Grid.Row="1" Grid.Column="2">
                <Button  Style="{DynamicResource But_Expenses}" Content="Добавить" Click="Add_Click">
                </Button>
                <Button  Style="{DynamicResource But_Expenses}" Content="Изменить" Click="Edit_Click">
                </Button>
                <Button Style="{DynamicResource But_Expenses}"  Content="Удалить" Click="Delete_Click">
                </Button>
                <Button Style="{DynamicResource But_Expenses}" Width="35" Height="35" Background="White">
                </Button>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" />
            <!--<Button Style="{DynamicResource FAQ}" Grid.Column="0" Content="$" HorizontalAlignment="Left" Margin="0" Height="25" Width="25" FontSize="18"/>-->
            <Button Style="{DynamicResource FAQ}" Grid.Column="2" Grid.Row="2" Content="->" Background="#908C30" VerticalAlignment="Center" Width="25" Height="25" Click="backButton_Click"/>
        </Grid>
        <!-- Окно для визуализации -->
        <Grid x:Name="VisualFrame" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition Height="*">
                </RowDefinition>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="3*">
                </ColumnDefinition>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <WpfPlot x:Name="groupPlot" Grid.Column="1" Grid.Row="1"/>
            <WpfPlot x:Name="piePlot" Grid.Column="2" Grid.Row="1"/>
            <Button Style="{DynamicResource FAQ}" />
            <Button Style="{DynamicResource FAQ}" Grid.Column="3" Grid.Row="3" Content="-&gt;" Background="#908C30" Width="25" Height="25" Click="backButton_Click" VerticalAlignment="Center"/>
        </Grid>
        <!-- Калькулятор вкладов -->
        <Grid x:Name="DepositFrame" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition/>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="300">
                </ColumnDefinition>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Style="{DynamicResource NameTableExpenses}" Grid.Row="0" Grid.Column="1" Content="Калькулятор вкладов"/>
            <TextBox Style="{DynamicResource Output}"  Grid.Row="1" Grid.Column="1"/>
            <StackPanel Grid.Row="1" Grid.Column="2">
                <StackPanel Orientation="Horizontal" Margin="10">
                    <!-- Стак панель для панелей ввода -->
                    <StackPanel x:Name="TextBox_ContCalc" HorizontalAlignment="Left">
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                    </StackPanel>
                    <!-- Стак панель для блоков текста -->
                    <StackPanel x:Name="Border_ContCalc" HorizontalAlignment="Right">
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Срок капитализации" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Сумма вклада" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Процентная ставка" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Срок вклада, месяцы" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                    </StackPanel>
                </StackPanel>
                <CheckBox Content="Капитализация" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" Grid.Column="3" />
            <Button Style="{DynamicResource FAQ}" Grid.Column="3" Grid.Row="3" Content="-&gt;" Background="#908C30" Width="25" Height="25" Click="backButton_Click" VerticalAlignment="Center"/>
        </Grid>
        <!-- Калькулятор процентов -->
        <Grid x:Name="PercentFrame" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition>
                </RowDefinition>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="300">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Style="{DynamicResource NameTableExpenses}" Grid.Row="0" Grid.Column="1" Content="Калькулятор процентов"/>
            <TextBox Style="{DynamicResource Output}"  Grid.Row="1" Grid.Column="1"/>
            <!-- Стак панель для панелей ввода -->
            <StackPanel Grid.Row="1" Grid.Column="2">
                <StackPanel Orientation="Horizontal" Margin="10">
                    <StackPanel x:Name="TextBox_BonCalc" HorizontalAlignment="Left">
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                    </StackPanel>
                    <!-- Стак панель для блоков текста -->
                    <StackPanel x:Name="Border_BonCalc" HorizontalAlignment="Right">
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Введите сумму" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Введите процент" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                </StackPanel>
                <CheckBox Content="Процент от числа" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
                <CheckBox Content="Число от процента" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
                <CheckBox Content="Сумма числа и процента" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
                <CheckBox Content="Разность числа и процента" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" Grid.Column="2" />
            <Button Style="{DynamicResource FAQ}" Grid.Column="2" Grid.Row="3" Content="-&gt;" Background="#908C30" Width="25" Height="25" Click="backButton_Click" VerticalAlignment="Center"/>
        </Grid>
        <!-- Калькулятор погашения кредитной карты -->
        <Grid x:Name="CreditFrame" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50">
                </RowDefinition>
                <RowDefinition/>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="300">
                </ColumnDefinition>
                <ColumnDefinition Width="50">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Style="{DynamicResource NameTableExpenses}" Grid.Row="0" Grid.Column="1" Content="Калькулятор кредитов"/>
            <TextBox Style="{DynamicResource Output}"  Grid.Row="1" Grid.Column="1"/>
            <StackPanel Grid.Row="1" Grid.Column="2">
                <StackPanel Orientation="Horizontal" Margin="10">
                    <!-- Стак панель для панелей ввода -->
                    <StackPanel x:Name="TextBox_CardCalc" HorizontalAlignment="Left">
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                        <TextBox Style="{DynamicResource Calc_TextBox}">
                        </TextBox>
                    </StackPanel>
                    <!-- Стак панель для блоков текста -->
                    <StackPanel x:Name="Border_CardCalc" HorizontalAlignment="Right">
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Начальный баланс" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Процент годовых" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Top"/>
                        </Border>
                        <Border Style="{DynamicResource Calc_TextBlock}">
                            <TextBlock Text="Срок кредита, месяцы" FontSize="14" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                </StackPanel>
                <RadioButton Content="Аннуитетные платежи" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
                <RadioButton Content="Дифференцированные платежи" FontSize="14" Background="LightGray" BorderBrush="DarkGray" Margin="10"/>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" Grid.Column="3" />
            <Button Style="{DynamicResource FAQ}" Grid.Column="3" Grid.Row="3" Content="-&gt;" Background="#908C30" Width="25" Height="25" Click="backButton_Click" VerticalAlignment="Center"/>
        </Grid>
        <!-- Окно списка пользователей -->
        <Grid x:Name="UserFrame" Background="Gray" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="90">
                </RowDefinition>
                <RowDefinition/>
                <RowDefinition Height="45">
                </RowDefinition>
                <RowDefinition Height="50">
                </RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30">
                </ColumnDefinition>
                <ColumnDefinition>
                </ColumnDefinition>
                <ColumnDefinition Width="139">
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!-- Список пользователей -->
            <ListView  Grid.Column="1" d:ItemsSource="{d:SampleData ItemCount=5}" Background="#FF6A6A6A" Foreground="Black" Margin="0,67,0,0" Grid.RowSpan="2">
                <ListView.View>
                    <GridView>
                        <GridViewColumn/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Label Content="Пользователи" FontSize="48" Grid.ColumnSpan="2" FontFamily="Palatino Linotype" FontWeight="Bold" Foreground="#FF424242" Grid.Column="1" Margin="0,0,3,0"/>
            <!-- Стак панель для кнопок редактирования -->
            <StackPanel x:Name="UserEditionsButton" Grid.Row="1" Visibility="Visible" Grid.Column="2" Orientation="Vertical" Margin="0,0,0,15">
                <Button Style="{DynamicResource UserButton}" Content="Добавить" Margin="0,20,0,15"/>
                <Button Style="{DynamicResource UserButton}" Content="Изменить" Margin="0,20,0,15"/>
                <Button Style="{DynamicResource UserButton}" Content="Удалить" Margin="0,20,0,15"/>
            </StackPanel>
            <Button Style="{DynamicResource FAQ}" Grid.Column="2" Grid.Row="3" Content="-&gt;" Background="#908C30" Width="25" Height="25" Click="backButton_Click" VerticalAlignment="Center"/>
        </Grid>
    </Grid>
</Window>
